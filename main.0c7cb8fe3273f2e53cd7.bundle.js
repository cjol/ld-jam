/*! For license information please see main.0c7cb8fe3273f2e53cd7.bundle.js.LICENSE.txt */
(()=>{var t,e={569:(t,e,s)=>{"use strict";var i=s(260),a=s(492),h=s.n(a);class o{}o.MECHANICAL_HOOK=1,o.MECHANICAL_ARM_SEGMENT=16,o.SUBMARINE=256,o.WALLS=4096,o.PHANTON_WALLS=65536,o.FISH=1048576;class r extends Phaser.GameObjects.GameObject{constructor(t,e,s){super(t,"background"),this.BACKGROUND_COLOUR=2378622,t.add.existing(this),this.graphics=t.add.graphics(),this.width=t.cameras.main.width,this.height=e;const a=i.Math.CeilTo(this.width/64),h=i.Math.CeilTo((64*a-this.width)/2),r=[1],n=[3];for(let t=0;t<a-2;t++)r.push(0),n.push(0);r.push(1),n.push(3);const l=[],c=[];for(let t=0;t<a;t++)l.push(0),c.push(2);const g=[l,l,c,l,n],u=i.Math.FloorTo(this.height/64)+1;for(let t=0;t<u;t++)g.push(r.slice());this.tilemap=t.make.tilemap({data:g,tileWidth:64,tileHeight:64,insertNull:!1}),this.tilemap.addTilesetImage("background-tiles",void 0,256,256);const d=this.tilemap.createLayer(0,"background-tiles",-h,0);d.setCollisionByExclusion([0,2]),t.matter.world.convertTilemapLayer(d);for(let t=0;t<u;t++)this.tilemap.getTileAt(0,t).setFlip(!0,!1);const p=d.getTilesWithin(0,0,a,u);for(const t of p){if(!t||!t.physics||!t.physics.matterBody)continue;const e=t.physics.matterBody;0===t.index?(e.setCollisionCategory(o.WALLS),e.setCollidesWith(o.FISH)):(e.setCollisionCategory(o.WALLS),e.setCollidesWith(o.SUBMARINE|o.MECHANICAL_HOOK))}s.registerBodies(d,a,u)}draw(){this.graphics.clear(),this.graphics.fillGradientStyle(this.BACKGROUND_COLOUR,this.BACKGROUND_COLOUR,1,1),this.graphics.fillRect(0,0,this.width,this.height)}}class n extends Phaser.Physics.Matter.Image{constructor(t,e,s){super(t.matter.world,0,0,"fish"+e.type,void 0,{frictionAir:0,mass:.001}),this.raycaster=s,this.x=e.position.x,this.y=e.position.y,this.displayWidth=this.width*e.scale,this.displayHeight=this.height*e.scale,this.velocity=e.direction.clone().scale(e.speed),this.forward=e.direction,this.setRotationAngle(e.directionAngle),this.worth=e.worth,this.weight=e.weight,t.add.existing(this),this.setCollisionCategory(o.FISH),this.setCollidesWith(o.MECHANICAL_HOOK)}update(t){const e=t/1e3;let s=new i.Math.Vector2(0,0);if(this.isGoingToCollide()){const t=this.obstacleRays(),e=this.steerTowards(t);s.add(e)}this.velocity.add(s);let a=this.velocity.length(),h=this.velocity.scale(1/a);a=i.Math.Clamp(a,n.minSpeed,n.maxSpeed),this.velocity=h.clone().scale(a);const o=this.velocity.clone().scale(e);this.x+=o.x,this.y+=o.y,this.setRotationAngle(h.angle()),this.forward=h}setRotationAngle(t){t>=0&&this.setFlipX(!0),this.rotation=t}isGoingToCollide(){const t=this.raycaster.createRay(),e=this.forward.clone().scale(n.lookAheadDistance);return t.setPositionAndDirection(this.x,this.y,e.x,e.y),t.cast()}obstacleRays(){for(const t of n.directions){const e=t.clone().rotate(this.rotation),s=e.clone().scale(n.lookAheadDistance),i=this.raycaster.createRay();if(i.setPositionAndDirection(this.x,this.y,s.x,s.y),!i.cast())return e}return this.forward}steerTowards(t){const e=t.clone().normalize().scale(n.maxSpeed).subtract(this.velocity);return this.clampMagnitude(e,1e3)}clampMagnitude(t,e){let s=t.length(),a=t.clone().scale(1/s);return s=i.Math.Clamp(s,0,e),a.scale(s)}}n.directions=[new Phaser.Math.Vector2(1,0).rotate(60*i.Math.DEG_TO_RAD),new Phaser.Math.Vector2(1,0).rotate(45*i.Math.DEG_TO_RAD),new Phaser.Math.Vector2(1,0).rotate(30*i.Math.DEG_TO_RAD),new Phaser.Math.Vector2(1,0).rotate(15*i.Math.DEG_TO_RAD),new Phaser.Math.Vector2(1,0).rotate(-15*i.Math.DEG_TO_RAD),new Phaser.Math.Vector2(1,0).rotate(-30*i.Math.DEG_TO_RAD),new Phaser.Math.Vector2(1,0).rotate(-45*i.Math.DEG_TO_RAD),new Phaser.Math.Vector2(1,0).rotate(-60*i.Math.DEG_TO_RAD)],n.minSpeed=0,n.maxSpeed=100,n.lookAheadDistance=100;class l{constructor(t,e,s){this.fishes=[];for(let i=0;i<e;i++){const e=this.spawnRandomFish(t);this.fishes[i]=new n(t,e,s)}}update(t){this.fishes.forEach((e=>e.update(t)))}spawnRandomFish(t){const e=new i.Math.RandomDataGenerator,s=e.integerInRange(64,t.cameras.main.width-64),a=e.integerInRange(64,t.cameras.main.height-64),h=e.integerInRange(n.maxSpeed/2,n.maxSpeed),o=e.integerInRange(0,1e4),r=e.integerInRange(1,3),l=e.rotation(),c=Math.cos(l),g=Math.sin(l),u=e.realInRange(.25,1);return{type:r,worth:o,weight:20*u,position:new Phaser.Math.Vector2(s,a),directionAngle:l,direction:new Phaser.Math.Vector2(c,g),speed:h,scale:u}}}class c{constructor(t,e,s=3){let i;this.segments=[];for(let a=0;a<s;a++){const s=i?i.x:e.x,h=i?i.y:e.y;this.segments[a]=new g(t,s,h,i),i=this.segments[a]}t.matter.add.constraint(e,this.segments[0],0,1,{pointA:{x:0,y:-20},pointB:{x:-30,y:0}}),this.hook=new u(t,this.segments[s-1])}update(){this.segments.forEach((t=>t.update())),this.hook.update()}}class g extends Phaser.Physics.Matter.Image{constructor(t,e,s,i){super(t.matter.world,e+80,s,"chain",void 0,{frictionAir:.05,mass:.001}),this.setCollisionCategory(o.MECHANICAL_ARM_SEGMENT),this.setCollidesWith(0),this.scene=t,this.displayHeight=20,this.displayWidth=80,t.add.existing(this),i&&t.matter.add.constraint(i,this,0,1,{pointA:{x:30,y:0},pointB:{x:-30,y:0}})}}class u extends Phaser.Physics.Matter.Image{constructor(t,e){super(t.matter.world,e.x+40,e.y,"mechanical-hook",void 0,{frictionAir:.05,mass:.1}),this.setCollisionCategory(o.MECHANICAL_HOOK),this.setCollidesWith(o.SUBMARINE|o.WALLS|o.FISH),this.prev=e,t.add.existing(this),this.displayHeight=40,this.displayWidth=40,t.matter.add.constraint(e,this,0,1,{pointA:{x:40,y:0},pointB:{x:0,y:0}}),this.keys=t.input.keyboard.addKeys({up:"UP",down:"DOWN",left:"LEFT",right:"RIGHT"},!0,!0)}update(){this.angle=this.prev.angle-90,this.updateKeys()}updateKeys(){this.keys.left.isDown?this.setVelocityX(-5):this.keys.right.isDown&&this.setVelocityX(5),this.keys.up.isDown?this.setVelocityY(-5):this.keys.down.isDown&&this.setVelocityY(5)}updateMouse(){const t=Phaser.Math.Angle.BetweenPoints(this.scene.input,this);this.setAngle(t),this.scene.input.isActive()?this.setAngularVelocity(5):this.setAngularVelocity(0)}}const d=new class{constructor(){this.totalWealth=0,this.currentWealth=0,this.maxDepthReached=0,this.currentDepth=0,this.upgrades={capacity:{totalUpgrades:[50,150,300,500,750,1e3],upgradesBrought:0},depthLimit:{totalUpgrades:[250,500,1e3,2e3,3e3,1e4],upgradesBrought:0},armour:{totalUpgrades:[2,3,4,5,6],upgradesBrought:0},chain:{totalUpgrades:[2,3,4],upgradesBrought:0},tank:{totalUpgrades:[1e9,90,135,180,225,270,305],upgradesBrought:0},shipSpeed:{totalUpgrades:[5,6,7],upgradesBrought:0},clawSpeed:{totalUpgrades:[5,6,7],upgradesBrought:0},clawSize:{totalUpgrades:[.25,.3,.35,.4],upgradesBrought:0},location:{totalUpgrades:[0,1,2],upgradesBrought:0},collectable:{totalUpgrades:[0,1,2],upgradesBrought:0}},this.initSub()}initSub(){this.submarine={oxygen:this.upgrades.tank.totalUpgrades[this.upgrades.tank.upgradesBrought],cargo:{fishWeight:0,fishValue:0,oreWeight:0,oreValue:0,researchWeight:0,researchValue:0},isAtSurface:!1,holdFull:!1,oxygenLow:!1}}getUpgradeValue(t){var e=this.upgrades[t];return e.totalUpgrades[e.upgradesBrought]}purchaseUpgrade(t){var e=this.upgrades[t];e.upgradesBrought<e.totalUpgrades.length&&(e.upgradesBrought+=1)}sellFish(){console.log("I'm selling all my fish!"),console.log("My new current worth is... "+this.currentWealth);var t=this.submarine.cargo.fishValue;this.totalWealth+=t,this.currentWealth+=t,this.submarine.cargo.fishValue=0,this.submarine.cargo.fishWeight=0,this.submarine.holdFull=!1}sellOre(){console.log("I'm selling all my ore!");var t=this.submarine.cargo.oreValue;this.totalWealth+=t,this.currentWealth+=t,this.submarine.cargo.oreValue=0,this.submarine.cargo.oreWeight=0,this.submarine.holdFull=!1}sellResearch(){console.log("I'm selling all my research!");var t=this.submarine.cargo.researchValue;this.totalWealth+=t,this.currentWealth+=t,this.submarine.cargo.researchValue=0,this.submarine.cargo.researchWeight=0,this.submarine.holdFull=!1}checkHoldCapacity(t){return this.submarine.cargo.fishWeight+this.submarine.cargo.oreWeight+this.submarine.cargo.researchWeight+t<=this.getUpgradeValue("capacity")||(this.submarine.holdFull=!0,!1)}catchFish(t){this.checkHoldCapacity(t.weight)&&(this.submarine.cargo.fishWeight+=t.weight,this.submarine.cargo.fishValue+=t.worth)}collectOre(){}collectResearch(){}};class p{constructor(t,e){this.scene=t,this.submarine=e,this.scene.matter.world.on("collisionstart",this.watchCollisions.bind(this))}watchCollisions(t){t.pairs.map(m).filter((t=>null!==t)).forEach((t=>{t.hook;const e=t.item;console.log("Caught something!",e),e instanceof n&&d.catchFish(e)}))}}function m(t){return t.bodyA.gameObject instanceof u?{hook:t.bodyA.gameObject,item:t.bodyB.gameObject}:t.bodyB.gameObject instanceof u?{hook:t.bodyB.gameObject,item:t.bodyA.gameObject}:null}class y{constructor(t,e){this.physics=t,this.tileBodies=e}setPosition(t,e,s,i){this.x1=t,this.y1=e,this.x2=s,this.y2=i}setPositionAndDirection(t,e,s,i){this.x1=t,this.y1=e,this.x2=t+s,this.y2=e+i}cast(){return this.physics.intersectRay(this.x1,this.y1,this.x2,this.y2,1,this.tileBodies).length>0}}class f{constructor(t){this.tileBodies=[],this.physics=t}registerBodies(t,e,s){const i=t.getTilesWithin(0,0,e,s);for(const t of i)t&&t.physics&&t.physics.matterBody&&this.tileBodies.push(t.physics.matterBody)}createRay(){return new y(this.physics,this.tileBodies)}}const w={width:80,height:16,lowColor:16711680,color:35071,lowThreshold:.3},b={width:80,height:16,lowColor:5592405,color:5592405,lowThreshold:.3};class x extends Phaser.GameObjects.Graphics{constructor(t,e,s,i,a=i,h){super(t),this.x=e,this.y=s,this.maxValue=i,this.value=a,t.add.existing(this),"health"==h&&(this.config=w),"cargo"==h&&(this.config=b)}update(t,e,s,i){i&&(this.maxValue=i),this.value=s,this.x=t,this.y=e,this.clear(),this.fillStyle(0),this.fillRect(-this.config.width/2,0,this.config.width,this.config.height),this.fillStyle(16777215),this.fillRect(-this.config.width/2+2,2,this.config.width-4,this.config.height-4);const a=this.value/this.maxValue;a<this.config.lowThreshold?this.fillStyle(this.config.lowColor):this.fillStyle(this.config.color);var h=Math.floor(a*(this.config.width-4));this.fillRect(-this.config.width/2+2,2,h,this.config.height-4)}}class M extends Phaser.Physics.Matter.Image{constructor(t,e,s){super(t.matter.world,e,s,"submarine",void 0,{frictionAir:.05,mass:500,restitution:.6}),t.add.existing(this),this.setupKeys(),this.setCollisionCategory(o.SUBMARINE),this.setCollidesWith(o.WALLS|o.MECHANICAL_HOOK),this.hook=new c(t,this),this.oxygenBar=new x(t,50,50,100,100,"health"),this.cargoBar=new x(t,50,50,100,100,"cargo"),this.setScale(.25)}setupKeys(){this.keys=this.scene.input.keyboard.addKeys({up:"W",down:"S",left:"A",right:"D"},!0,!0)}update(){this.hook.update(),this.updateKeys(),this.updateOxygen(),this.updateCargo()}updateKeys(){if(d.submarine.oxygen>0){let t=this.flipX;this.keys.left.isDown?(this.setVelocityX(-5),t=!0):this.keys.right.isDown&&(this.setVelocityX(5),t=!1),this.setFlip(t,!1),this.setRotation(0),this.keys.up.isDown?(this.setVelocityY(-5),this.setRotation(t?.15:-.15)):this.keys.down.isDown&&(this.setVelocityY(5),this.setRotation(t?-.15:.15)),this.y<200?(this.y=200,d.submarine.isAtSurface||(d.submarine.isAtSurface=!0)):d.submarine.isAtSurface&&(d.submarine.isAtSurface=!1)}}updateOxygen(){this.y>220?d.submarine.oxygen-=.05:(d.submarine.oxygen+=1,d.submarine.oxygenLow=!1),d.submarine.oxygen=Math.max(0,Math.min(d.submarine.oxygen,d.getUpgradeValue("tank"))),this.oxygenBar.update(this.x,this.y+-80,d.submarine.oxygen,d.getUpgradeValue("tank")),d.submarine.oxygen/d.getUpgradeValue("tank")<=.3&&(d.submarine.oxygenLow=!0),0==d.submarine.oxygen&&(this.flipY=!0,this.setVelocityY(5))}updateCargo(){var t=d.submarine.cargo.fishWeight+d.submarine.cargo.oreWeight+d.submarine.cargo.researchWeight;this.cargoBar.update(this.x,this.y+-60,t,d.getUpgradeValue("capacity"))}}class A extends Phaser.Scene{constructor(){super({key:"MainScene"})}create(){this.width=this.cameras.main.width,this.height=this.cameras.main.height;const t=new f(this.matter),e=1e4;this.matter.world.setBounds(0,0,this.width,e),this.cameras.main.setBounds(0,0,this.width,e),this.background=new r(this,e,t),this.submarine=new M(this,this.width/2,200),this.fishGroup=new l(this,10,t),this.gameWorld=new p(this,this.submarine),this.cameras.main.startFollow(this.submarine)}update(t,e){this.background.draw(),this.submarine.update(),this.fishGroup.update(e)}}class O extends Phaser.Scene{constructor(){super({key:"PreloadScene"})}preload(){this.load.image("submarine","assets/img/submarine.png"),this.load.image("mechanical-hook","assets/img/claw.png"),this.load.image("chain","assets/img/chain.png"),this.load.image("fish1","assets/img/fish_type1.png"),this.load.image("fish2","assets/img/fish_type2.png"),this.load.image("fish3","assets/img/fish_type3.png"),this.load.image("background-tiles","assets/img/tiles/wall.png"),this.load.image("waterline-tiles","assets/img/tiles/water-top.png"),this.load.image("sell-fish-button","assets/img/ui/sell_fish_button.png")}create(){this.scene.start("MainScene")}}class C extends Phaser.GameObjects.Sprite{constructor(t,e,s,i,a){super(t,s,i,e),t.add.existing(this),this.buttonKey=e,this.gameManager=a,this.setInteractive(),this.setScale(.25),this.setAlpha(.25);let h=this;this.on("pointerdown",(function(){h.buttonWasClicked()})),this.on("pointerover",(function(){h.buttonMouseover()})),this.on("pointerout",(function(){h.buttonMouseout()}))}buttonWasClicked(){switch(this.buttonKey){case"sell-fish-button":this.gameManager.sellFish();break;case"sell-ore-button":this.gameManager.sellOre();break;case"sell-research-button":this.gameManager.sellResearch()}}buttonMouseover(){this.setAlpha(1)}buttonMouseout(){this.setAlpha(.25)}}class k{constructor(t,e){this.scene=t,this.gameManager=e,this.sellFishButton=new C(this.scene,"sell-fish-button",100,100,this.gameManager),this.sellOreButton=new C(this.scene,"sell-ore-button",100,200,this.gameManager),this.sellResearchButton=new C(this.scene,"sell-research-button",100,300,this.gameManager),this.warningMessage=new Phaser.GameObjects.Text(t,t.cameras.main.width/2,t.cameras.main.height-100,"I'm a warning",{color:"red",fontSize:"56px"}).setOrigin(.5),this.warningMessage.visible=!1,t.add.existing(this.warningMessage)}update(){const{isAtSurface:t}=this.gameManager.submarine;this.sellFishButton.visible=t,this.sellOreButton.visible=t,this.sellResearchButton.visible=t;const{holdFull:e}=this.gameManager.submarine;this.warningMessage.setText("Hold Full!").visible=e;const{oxygenLow:s}=this.gameManager.submarine;s&&(this.warningMessage.setText("Oxygen Level Low!").visible=!0)}}class v extends Phaser.GameObjects.Text{constructor(t){super(t,10,10,"",{color:"white",fontSize:"28px"}),t.add.existing(this),this.setOrigin(0)}update(){this.setText(`fps: ${Math.floor(this.scene.game.loop.actualFps)}`)}}class B extends Phaser.Scene{constructor(){super({key:"UIScene",active:!0})}create(){this.fpsText=new v(this),this.UIGameObject=new k(this,d)}update(t,e){this.fpsText.update(),this.UIGameObject.update()}}const R={type:Phaser.AUTO,backgroundColor:"#ffffff",scale:{parent:"phaser-game",mode:Phaser.Scale.FIT,autoCenter:Phaser.Scale.CENTER_BOTH,width:window.innerWidth,height:window.innerHeight},scene:[O,A,B],physics:{default:"matter",matter:{debug:!0,gravity:{y:0}}},plugins:{scene:[{key:"PhaserRaycaster",plugin:h(),mapping:"raycasterPlugin"}]}};window.addEventListener("load",(()=>{new Phaser.Game(R)}))},204:()=>{console.log("%c %c %c %c %c Built using phaser-project-template %c https://github.com/yandeu/phaser-project-template","background: #ff0000","background: #ffff00","background: #00ff00","background: #00ffff","color: #fff; background: #000000;","background: none")}},s={};function i(t){var a=s[t];if(void 0!==a)return a.exports;var h=s[t]={exports:{}};return e[t].call(h.exports,h,h.exports,i),h.exports}i.m=e,t=[],i.O=(e,s,a,h)=>{if(!s){var o=1/0;for(l=0;l<t.length;l++){for(var[s,a,h]=t[l],r=!0,n=0;n<s.length;n++)(!1&h||o>=h)&&Object.keys(i.O).every((t=>i.O[t](s[n])))?s.splice(n--,1):(r=!1,h<o&&(o=h));r&&(t.splice(l--,1),e=a())}return e}h=h||0;for(var l=t.length;l>0&&t[l-1][2]>h;l--)t[l]=t[l-1];t[l]=[s,a,h]},i.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return i.d(e,{a:e}),e},i.d=(t,e)=>{for(var s in e)i.o(e,s)&&!i.o(t,s)&&Object.defineProperty(t,s,{enumerable:!0,get:e[s]})},i.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),(()=>{var t={179:0};i.O.j=e=>0===t[e];var e=(e,s)=>{var a,h,[o,r,n]=s,l=0;for(a in r)i.o(r,a)&&(i.m[a]=r[a]);if(n)var c=n(i);for(e&&e(s);l<o.length;l++)h=o[l],i.o(t,h)&&t[h]&&t[h][0](),t[o[l]]=0;return i.O(c)},s=self.webpackChunkphaser_project_template=self.webpackChunkphaser_project_template||[];s.forEach(e.bind(null,0)),s.push=e.bind(null,s.push.bind(s))})(),i.O(void 0,[216],(()=>i(569)));var a=i.O(void 0,[216],(()=>i(204)));a=i.O(a)})();