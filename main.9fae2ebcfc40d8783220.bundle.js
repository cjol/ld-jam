/*! For license information please see main.9fae2ebcfc40d8783220.bundle.js.LICENSE.txt */
(()=>{var t,e={252:(t,e,s)=>{"use strict";var i=s(260),a=s(492),h=s.n(a);class r{}r.MECHANICAL_HOOK=1,r.MECHANICAL_ARM_SEGMENT=16,r.SUBMARINE=256,r.WALLS=4096,r.PHANTOM_WALLS=65536,r.FISH=1048576;class o extends Phaser.GameObjects.GameObject{constructor(t,e,s){super(t,"background"),this.BACKGROUND_COLOUR=2378622,this.SafeSpawnHeight=0,t.add.existing(this),this.graphics=t.add.graphics(),this.width=t.cameras.main.width,this.height=e;const a=64,h=i.Math.CeilTo(this.width/a),o=i.Math.CeilTo((h*a-this.width)/2),n=[1],c=[3],l=[5];for(let t=0;t<h-2;t++)n.push(0),c.push(0),l.push(6);n.push(1),c.push(3),l.push(5);const g=[],u=[],d=[];for(let t=0;t<h;t++)g.push(0),u.push(4),d.push(2);const p=[g,g,d,u,c],m=p.length-1,y=i.Math.FloorTo(this.height/a)+1-p.length-2;for(let t=0;t<y;t++)p.push(n.slice());p.push(l),p.push(u),this.tilemap=t.make.tilemap({data:p,tileWidth:a,tileHeight:a,insertNull:!1}),this.tilemap.addTilesetImage("background-tiles",void 0,256,256);const b=this.tilemap.createLayer(0,"background-tiles",-o,0);b.setCollision([1,3,4,5,6]),t.matter.world.convertTilemapLayer(b);const f=y+2;for(let t=0;t<f;t++)this.tilemap.getTileAt(0,t+m).setFlip(!0,!1);const w=b.getTilesWithin(0,0,h,y);for(const t of w){if(!t||!t.physics||!t.physics.matterBody)continue;const e=t.physics.matterBody;4===t.index?(e.setCollisionCategory(r.PHANTOM_WALLS),e.setCollidesWith(r.FISH)):(e.setCollisionCategory(r.WALLS),e.setCollidesWith(r.SUBMARINE|r.MECHANICAL_HOOK))}s.registerBodies(b,h,y),this.SafeSpawnHeight=p.length*a}draw(){this.graphics.clear(),this.graphics.fillGradientStyle(this.BACKGROUND_COLOUR,this.BACKGROUND_COLOUR,1,1),this.graphics.fillRect(0,0,this.width,this.height)}}class n extends Phaser.Physics.Matter.Image{constructor(t,e,s){super(t.matter.world,0,0,"fish"+e.type,void 0,{frictionAir:0,mass:.001}),this.raycaster=s,this.x=e.position.x,this.y=e.position.y,this.displayWidth=this.width*e.scale,this.displayHeight=this.height*e.scale,this.velocity=e.direction.clone().scale(e.speed),this.forward=e.direction,this.setRotationAngle(e.directionAngle),this.worth=e.worth,this.weight=e.weight,t.add.existing(this),this.setCollisionCategory(r.FISH),this.setCollidesWith(r.MECHANICAL_HOOK|r.FISH),this.setIgnoreGravity(!0)}update(t){const e=t/1e3;let s=new i.Math.Vector2(0,0);if(this.isGoingToCollide()){const t=this.obstacleRays(),e=this.steerTowards(t);s.add(e)}this.velocity.add(s.scale(e));let a=this.velocity.length(),h=this.velocity.scale(1/a);a=i.Math.Clamp(a,n.minSpeed,n.maxSpeed),this.velocity=h.clone().scale(a);const r=this.velocity.clone().scale(e);this.x+=r.x,this.y+=r.y,this.setRotationAngle(h.angle()),this.forward=h}setRotationAngle(t){t>=0&&this.setFlipX(!0),this.rotation=t}isGoingToCollide(){const t=this.raycaster.createRay(),e=this.forward.clone().scale(n.lookAheadDistance);return t.setPositionAndDirection(this.x,this.y,e.x,e.y),t.cast()}obstacleRays(){for(const t of n.directions){const e=t.clone().rotate(this.rotation),s=e.clone().scale(n.lookAheadDistance),i=this.raycaster.createRay();if(i.setPositionAndDirection(this.x,this.y,s.x,s.y),!i.cast())return e}return this.forward}steerTowards(t){const e=t.clone().normalize().scale(n.maxSpeed).subtract(this.velocity);return this.clampMagnitude(e,1e3)}clampMagnitude(t,e){let s=t.length(),a=t.clone().scale(1/s);return s=i.Math.Clamp(s,0,e),a.scale(s)}}n.directions=[new Phaser.Math.Vector2(1,0).rotate(60*i.Math.DEG_TO_RAD),new Phaser.Math.Vector2(1,0).rotate(-60*i.Math.DEG_TO_RAD),new Phaser.Math.Vector2(1,0).rotate(45*i.Math.DEG_TO_RAD),new Phaser.Math.Vector2(1,0).rotate(-45*i.Math.DEG_TO_RAD),new Phaser.Math.Vector2(1,0).rotate(30*i.Math.DEG_TO_RAD),new Phaser.Math.Vector2(1,0).rotate(-30*i.Math.DEG_TO_RAD),new Phaser.Math.Vector2(1,0).rotate(15*i.Math.DEG_TO_RAD),new Phaser.Math.Vector2(1,0).rotate(-15*i.Math.DEG_TO_RAD)],n.minSpeed=0,n.maxSpeed=100,n.lookAheadDistance=100;class c{constructor(t,e,s,i){this.fishes=[];for(let a=0;a<s;a++){const s=this.spawnRandomFish(t,i);this.fishes[a]=new n(t,s,e)}}update(t){this.fishes.forEach((e=>e.update(t)))}spawnRandomFish(t,e){const s=new i.Math.RandomDataGenerator,a=s.integerInRange(64,t.cameras.main.width-64),h=s.integerInRange(e+64,t.cameras.main.height-64),r=s.integerInRange(n.maxSpeed/2,n.maxSpeed),o=s.integerInRange(0,1e4),c=s.integerInRange(1,3),l=s.rotation(),g=Math.cos(l),u=Math.sin(l),d=s.realInRange(.25,1);return{type:c,worth:o,weight:20*d,position:new Phaser.Math.Vector2(a,h),directionAngle:l,direction:new Phaser.Math.Vector2(g,u),speed:r,scale:d}}}const l=new class{constructor(){this.totalWealth=0,this.currentWealth=0,this.maxDepthReached=0,this.currentDepth=0,this.upgradeMenuOpen=!1,this.upgrades={capacity:{totalUpgrades:[50,150,300,500,750,1e3],upgradesBought:0,price:[0,10,20,30,40,50]},depthLimit:{totalUpgrades:[250,500,1e3,2e3,3e3,1e4],upgradesBought:0,price:[0,10,20,30,40,50]},armour:{totalUpgrades:[2,3,4,5,6],upgradesBought:0,price:[0,10,20,30,40]},chain:{totalUpgrades:[1,2,3,4],upgradesBought:0,price:[0,10,20]},tank:{totalUpgrades:[45,90,135,180,225,270,305],upgradesBought:0,price:[0,10,20,30,40,50,60]},shipSpeed:{totalUpgrades:[5,6,7],upgradesBought:0,price:[0,10,20]},clawSpeed:{totalUpgrades:[5,6,7],upgradesBought:0,price:[0,10,20]},clawSize:{totalUpgrades:[.25,.3,.35,.4],upgradesBought:0,price:[0,10,20,30]},location:{totalUpgrades:[0,1,2],upgradesBought:0,price:[0,10,20]},collectable:{totalUpgrades:[0,1,2],upgradesBought:0,price:[0,10,20]}},this.initSub()}initSub(){this.submarine={oxygen:this.upgrades.tank.totalUpgrades[this.upgrades.tank.upgradesBought],cargo:{fishWeight:0,fishValue:0,oreWeight:0,oreValue:0,researchWeight:0,researchValue:0},isAtSurface:!0,isDead:!1,holdFull:!1,oxygenLow:!1}}getUpgradeValue(t){var e=this.upgrades[t];return e.totalUpgrades[e.upgradesBought]}purchaseUpgrade(t){var e=this.upgrades[t];if(e.upgradesBought<e.totalUpgrades.length-1){var s=e.price[e.upgradesBought+1];s<=this.currentWealth&&(e.upgradesBought+=1,this.currentWealth-=s)}}sellFish(){console.log("I'm selling all my fish!");var t=this.submarine.cargo.fishValue;this.totalWealth+=t,this.currentWealth+=t,this.submarine.cargo.fishValue=0,this.submarine.cargo.fishWeight=0,this.submarine.holdFull=!1}sellOre(){console.log("I'm selling all my ore!");var t=this.submarine.cargo.oreValue;this.totalWealth+=t,this.currentWealth+=t,this.submarine.cargo.oreValue=0,this.submarine.cargo.oreWeight=0,this.submarine.holdFull=!1}sellResearch(){console.log("I'm selling all my research!");var t=this.submarine.cargo.researchValue;this.totalWealth+=t,this.currentWealth+=t,this.submarine.cargo.researchValue=0,this.submarine.cargo.researchWeight=0,this.submarine.holdFull=!1}checkHoldCapacity(t){return this.submarine.cargo.fishWeight+this.submarine.cargo.oreWeight+this.submarine.cargo.researchWeight+t<=this.getUpgradeValue("capacity")||(this.submarine.holdFull=!0,!1)}catchFish(t){this.checkHoldCapacity(t.weight)&&(this.submarine.cargo.fishWeight+=t.weight,this.submarine.cargo.fishValue+=t.worth)}collectOre(){}collectResearch(){}},g={width:80,height:16,lowColor:16711680,color:35071,lowThreshold:.5},u={width:80,height:16,lowColor:5592405,color:5592405,lowThreshold:.3};class d extends Phaser.GameObjects.Graphics{constructor(t,e,s,i,a=i,h){super(t),this.x=e,this.y=s,this.maxValue=i,this.value=a,t.add.existing(this),"health"==h&&(this.config=g),"cargo"==h&&(this.config=u),this.barName=h}update(t,e,s,i){i&&(this.maxValue=i),this.value=s,this.x=t,this.y=e,this.clear(),this.fillStyle(0),this.fillRect(-this.config.width/2,0,this.config.width,this.config.height),this.fillStyle(16777215),this.fillRect(-this.config.width/2+2,2,this.config.width-4,this.config.height-4);const a=this.value/this.maxValue;a<this.config.lowThreshold?this.fillStyle(this.config.lowColor):this.fillStyle(this.config.color);var h=Math.floor(a*(this.config.width-4));this.fillRect(-this.config.width/2+2,2,h,this.config.height-4)}}const p=220;class m extends Phaser.Physics.Matter.Image{constructor(t,e,s=200){super(t.matter.world,e,s,"submarine",void 0,{frictionAir:.05,mass:500}),t.add.existing(this),this.setupKeys(),this.setCollisionCategory(r.SUBMARINE),this.setCollidesWith(r.WALLS|r.MECHANICAL_HOOK),this.hook=new y(t,this),this.oxygenBar=new d(t,50,50,100,100,"health"),this.cargoBar=new d(t,50,50,100,100,"cargo"),this.setScale(.25),this.setIgnoreGravity(!0)}setupKeys(){this.keys=this.scene.input.keyboard.addKeys({up:"W",down:"S",left:"A",right:"D"},!0,!0)}update(){this.updateKeys(),this.updateArm(),this.updateOxygen(),this.updateCargo();var t=(this.y-p)/10;l.currentDepth=t,t>l.maxDepthReached&&(l.maxDepthReached=t)}updateArm(){this.hook.update()}upgradeArm(){this.hook.destroy(),this.hook=new y(this.scene,this,l.getUpgradeValue("chain"))}updateKeys(){if(!l.submarine.isDead){const t=l.getUpgradeValue("shipSpeed");let e=this.flipX;this.keys.left.isDown?(this.setVelocityX(-t),e=!0):this.keys.right.isDown&&(this.setVelocityX(t),e=!1),this.setFlip(e,!1),this.setRotation(0),this.keys.up.isDown?(this.setVelocityY(1.8*-t),this.setRotation(e?.1:-.1)):this.keys.down.isDown&&(this.setVelocityY(t),this.setRotation(e?-.1:.1)),this.y<p&&(this.y=p),this.y<240?l.submarine.isAtSurface=!0:l.submarine.isAtSurface&&(l.submarine.isAtSurface=!1)}}updateOxygen(){const t=l.getUpgradeValue("tank");l.submarine.isAtSurface?(l.submarine.oxygen+=1,l.submarine.oxygenLow=!1):l.submarine.oxygen-=.05,l.submarine.oxygen=Math.max(0,Math.min(l.submarine.oxygen,t)),this.oxygenBar.update(this.x,this.y+-80,l.submarine.oxygen,t),l.submarine.oxygen/t<=.3&&(l.submarine.oxygenLow=!0),l.submarine.oxygen<=0&&(l.submarine.isDead=!0,this.setFrictionAir(.5),this.setAngularVelocity(.1),this.setIgnoreGravity(!1))}updateCargo(){var t=l.submarine.cargo.fishWeight+l.submarine.cargo.oreWeight+l.submarine.cargo.researchWeight;this.cargoBar.update(this.x,this.y+-60,t,l.getUpgradeValue("capacity"))}}class y{constructor(t,e,s=3){let i;this.segments=[];for(let a=0;a<s;a++){const s=i?i.x:e.x,h=i?i.y:e.y;this.segments[a]=new b(t,s,h,i),i=this.segments[a]}t.matter.add.constraint(e,this.segments[0],0,1,{pointA:{x:0,y:0},pointB:{x:-30,y:0}}),this.hook=new f(t,this.segments[s-1])}update(){this.segments.forEach((t=>t.update())),this.hook.update()}destroy(){this.segments.forEach((t=>t.destroy())),this.hook.destroy()}}class b extends Phaser.Physics.Matter.Image{constructor(t,e,s,i){super(t.matter.world,e,s,"chain",void 0,{mass:3}),this.setIgnoreGravity(!0),this.setCollisionCategory(r.MECHANICAL_ARM_SEGMENT),this.setCollidesWith(0),this.scene=t,this.displayHeight=20,this.displayWidth=80,t.add.existing(this),i&&(this.y+=80,t.matter.add.constraint(i,this,0,1,{pointA:{x:30,y:0},pointB:{x:-30,y:0}}))}}class f extends Phaser.Physics.Matter.Image{constructor(t,e){super(t.matter.world,e.x,e.y+40,"mechanical-hook",void 0,{mass:5}),this.setIgnoreGravity(!1),this.setCollisionCategory(r.MECHANICAL_HOOK),this.setCollidesWith(r.WALLS|r.FISH),this.prev=e,t.add.existing(this),this.displayHeight=40,this.displayWidth=40,t.matter.add.constraint(e,this,0,1,{pointA:{x:40,y:0},pointB:{x:0,y:0}})}update(){this.updateMouse(),this.angle=this.prev.angle-90}updateMouse(){const t=new Phaser.Math.Vector2(this.scene.input.mousePointer.worldX,this.scene.input.mousePointer.worldY);if(this.y<p)this.y=221;else{const e=t.subtract(this),s=l.getUpgradeValue("clawSpeed");if(e.length()>s&&!l.submarine.isAtSurface&&!l.submarine.isDead){const t=e.setLength(s);this.setVelocity(t.x,t.y)}else this.setVelocity(0)}}}class w{constructor(t,e){this.scene=t,this.submarine=e,this.scene.matter.world.on("collisionstart",this.watchCollisions.bind(this))}watchCollisions(t){t.pairs.map(x).filter((t=>null!==t)).forEach((t=>{t.hook;const e=t.item;console.log("Caught something!",e),e instanceof n&&l.catchFish(e)}))}}function x(t){return t.bodyA.gameObject instanceof f?{hook:t.bodyA.gameObject,item:t.bodyB.gameObject}:t.bodyB.gameObject instanceof f?{hook:t.bodyB.gameObject,item:t.bodyA.gameObject}:null}class M{constructor(t,e){this.physics=t,this.tileBodies=e}setPosition(t,e,s,i){this.x1=t,this.y1=e,this.x2=s,this.y2=i}setPositionAndDirection(t,e,s,i){this.x1=t,this.y1=e,this.x2=t+s,this.y2=e+i}cast(){return this.physics.intersectRay(this.x1,this.y1,this.x2,this.y2,1,this.tileBodies).length>0}}class O{constructor(t){this.tileBodies=[],this.physics=t}registerBodies(t,e,s){const i=t.getTilesWithin(0,0,e,s);for(const t of i)t&&t.physics&&t.physics.matterBody&&this.tileBodies.push(t.physics.matterBody)}createRay(){return new M(this.physics,this.tileBodies)}}class A extends Phaser.Scene{constructor(){super({key:"MainScene"})}create(){this.width=this.cameras.main.width,this.height=this.cameras.main.height;const t=new O(this.matter),e=1e4;this.matter.world.setBounds(0,0,this.width,e),this.cameras.main.setBounds(0,0,this.width,e),this.background=new o(this,e,t),this.submarine=new m(this,this.width/2),this.fishGroup=new c(this,t,10,this.background.SafeSpawnHeight),this.gameWorld=new w(this,this.submarine),this.cameras.main.startFollow(this.submarine)}update(t,e){this.background.draw(),this.submarine.update(),this.fishGroup.update(e)}}class v extends Phaser.Scene{constructor(){super({key:"PreloadScene"})}preload(){this.load.image("submarine","assets/img/submarine.png"),this.load.image("mechanical-hook","assets/img/claw.png"),this.load.image("chain","assets/img/chain.png"),this.load.image("fish1","assets/img/fish_type1.png"),this.load.image("fish2","assets/img/fish_type2.png"),this.load.image("fish3","assets/img/fish_type3.png"),this.load.image("background-tiles","assets/img/tiles/wall.png"),this.load.image("button-background","assets/img/ui/button_background.png")}create(){this.scene.start("MainScene")}}class S extends Phaser.GameObjects.Image{constructor(t,e,s,i,a,h){super(t,i,a,"button-background"),t.add.existing(this),this.buttonText=new Phaser.GameObjects.Text(t,i,a,s,{color:"green",fontSize:"28px"}),t.add.existing(this.buttonText),this.buttonKey=e,this.gameManager=h,this.setInteractive({useHandCursor:!0}),this.setAlpha(.25);let r=this;this.on("pointerdown",(function(){r.buttonWasClicked()})),this.on("pointerover",(function(){r.buttonMouseover()})),this.on("pointerout",(function(){r.buttonMouseout()}))}buttonWasClicked(){switch(this.buttonKey){case"sell-fish-button":this.gameManager.sellFish();break;case"sell-ore-button":this.gameManager.sellOre();break;case"sell-research-button":this.gameManager.sellResearch();break;case"upgrade-menu-button":this.gameManager.upgradeMenuOpen=!this.gameManager.upgradeMenuOpen;break;case"upgrade-oxygen-button":this.gameManager.purchaseUpgrade("tank");break;case"upgrade-cargo-capacity":this.gameManager.purchaseUpgrade("capacity")}}buttonMouseover(){this.setAlpha(1)}buttonMouseout(){this.setAlpha(.25)}}class C{constructor(t,e,s,i){this.buttons=[],this.buttons.push(new S(t,"upgrade-oxygen-button","O2 Tank",e,s,i)),this.buttons.push(new S(t,"upgrade-cargo-capacity","Hold Size",e,s+100,i))}showMenu(t){for(let e of this.buttons)e.visible=t,e.buttonText.visible=t}}class k{constructor(t,e){this.scene=t,this.gameManager=e,this.sellFishButton=new S(this.scene,"sell-fish-button","Sell Fish",100,100,this.gameManager),this.sellOreButton=new S(this.scene,"sell-ore-button","Sell Ore",100,200,this.gameManager),this.sellResearchButton=new S(this.scene,"sell-research-button","Sell Research",100,300,this.gameManager),this.upgradeMenuButton=new S(this.scene,"upgrade-menu-button","Upgrade",300,100,this.gameManager),this.upgradeMenu=new C(this.scene,400,200,this.gameManager),this.warningMessage=new Phaser.GameObjects.Text(t,t.cameras.main.width/2,t.cameras.main.height-100,"I'm a warning",{color:"red",fontSize:"56px"}).setOrigin(.5),this.warningMessage.visible=!1,t.add.existing(this.warningMessage),this.currentWealthText=new Phaser.GameObjects.Text(t,3*t.cameras.main.width/4,50,"Gold: 0",{color:"green",fontSize:"36px"}).setOrigin(.5),t.add.existing(this.currentWealthText),this.currentDepthText=new Phaser.GameObjects.Text(t,3*t.cameras.main.width/4,80,"Current Depth: 0",{color:"green",fontSize:"36px"}).setOrigin(.5),t.add.existing(this.currentDepthText),this.maxDepthText=new Phaser.GameObjects.Text(t,3*t.cameras.main.width/4,110,"Max Depth: 0",{color:"green",fontSize:"36px"}).setOrigin(.5),t.add.existing(this.maxDepthText)}update(){const{isAtSurface:t}=this.gameManager.submarine;this.sellFishButton.visible=t,this.sellFishButton.buttonText.visible=t,this.sellOreButton.visible=t,this.sellOreButton.buttonText.visible=t,this.sellResearchButton.visible=t,this.sellResearchButton.buttonText.visible=t,this.upgradeMenuButton.visible=t,this.upgradeMenuButton.buttonText.visible=t;const{holdFull:e}=this.gameManager.submarine;this.warningMessage.setText("Hold Full!").visible=e;const{oxygenLow:s}=this.gameManager.submarine;s&&(this.warningMessage.setText("Oxygen Level Low!").visible=!0),t||(this.gameManager.upgradeMenuOpen=!1),this.upgradeMenu.showMenu(this.gameManager.upgradeMenuOpen),this.currentWealthText.setText("Gold: "+this.gameManager.currentWealth),this.currentDepthText.setText("Current Depth: "+Math.floor(this.gameManager.currentDepth)),this.maxDepthText.setText("Max Depth: "+Math.floor(this.gameManager.maxDepthReached))}}class T extends Phaser.GameObjects.Text{constructor(t){super(t,10,10,"",{color:"white",fontSize:"28px"}),t.add.existing(this),this.setOrigin(0)}update(){this.setText(`fps: ${Math.floor(this.scene.game.loop.actualFps)}`)}}class B extends Phaser.Scene{constructor(){super({key:"UIScene",active:!0})}create(){this.fpsText=new T(this),this.UIGameObject=new k(this,l)}update(t,e){this.fpsText.update(),this.UIGameObject.update()}}const R={type:Phaser.AUTO,backgroundColor:"#ffffff",scale:{parent:"phaser-game",mode:Phaser.Scale.FIT,autoCenter:Phaser.Scale.CENTER_BOTH,width:window.innerWidth,height:window.innerHeight},scene:[v,A,B],physics:{default:"matter",matter:{debug:!1,gravity:{y:10}}},plugins:{scene:[{key:"PhaserRaycaster",plugin:h(),mapping:"raycasterPlugin"}]}};window.addEventListener("load",(()=>{new Phaser.Game(R)}))},204:()=>{console.log("%c %c %c %c %c Built using phaser-project-template %c https://github.com/yandeu/phaser-project-template","background: #ff0000","background: #ffff00","background: #00ff00","background: #00ffff","color: #fff; background: #000000;","background: none")}},s={};function i(t){var a=s[t];if(void 0!==a)return a.exports;var h=s[t]={exports:{}};return e[t].call(h.exports,h,h.exports,i),h.exports}i.m=e,t=[],i.O=(e,s,a,h)=>{if(!s){var r=1/0;for(c=0;c<t.length;c++){for(var[s,a,h]=t[c],o=!0,n=0;n<s.length;n++)(!1&h||r>=h)&&Object.keys(i.O).every((t=>i.O[t](s[n])))?s.splice(n--,1):(o=!1,h<r&&(r=h));o&&(t.splice(c--,1),e=a())}return e}h=h||0;for(var c=t.length;c>0&&t[c-1][2]>h;c--)t[c]=t[c-1];t[c]=[s,a,h]},i.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return i.d(e,{a:e}),e},i.d=(t,e)=>{for(var s in e)i.o(e,s)&&!i.o(t,s)&&Object.defineProperty(t,s,{enumerable:!0,get:e[s]})},i.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),(()=>{var t={179:0};i.O.j=e=>0===t[e];var e=(e,s)=>{var a,h,[r,o,n]=s,c=0;for(a in o)i.o(o,a)&&(i.m[a]=o[a]);if(n)var l=n(i);for(e&&e(s);c<r.length;c++)h=r[c],i.o(t,h)&&t[h]&&t[h][0](),t[r[c]]=0;return i.O(l)},s=self.webpackChunkphaser_project_template=self.webpackChunkphaser_project_template||[];s.forEach(e.bind(null,0)),s.push=e.bind(null,s.push.bind(s))})(),i.O(void 0,[216],(()=>i(252)));var a=i.O(void 0,[216],(()=>i(204)));a=i.O(a)})();