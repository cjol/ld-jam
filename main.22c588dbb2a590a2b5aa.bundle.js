/*! For license information please see main.22c588dbb2a590a2b5aa.bundle.js.LICENSE.txt */
(()=>{var e,t={757:(e,t,s)=>{"use strict";var i=s(260);class a{}a.MECHANICAL_HOOK=1,a.MECHANICAL_ARM_SEGMENT=16,a.SUBMARINE=256,a.WALLS=4096,a.PHANTOM_WALLS=65536,a.FISH=1048576,a.HAZARD=1048576;class h extends Phaser.GameObjects.GameObject{constructor(e,t){super(e,"background"),this.SKY_COLOUR=11263972,this.SKY_HEIGHT=180,this.BACKGROUND_COLOUR=2444414,this.SafeSpawnHeight=0,e.add.existing(this),this.graphics=e.add.graphics(),this.width=e.cameras.main.width,this.height=t;const s=64,h=i.Math.CeilTo(this.width/s),r=i.Math.CeilTo((h*s-this.width)/2),n=[1],o=[3],l=[5];for(let e=0;e<h-2;e++)n.push(0),o.push(0),l.push(6);n.push(1),o.push(3),l.push(5);const c=[],g=[],u=[];for(let e=0;e<h;e++)c.push(0),g.push(4),u.push(2);const d=[c,c,u,g,o],p=d.length-1,m=i.Math.FloorTo(this.height/s)+1-d.length-2;for(let e=0;e<m;e++)d.push(n.slice());d.push(l),d.push(g),this.tilemap=e.make.tilemap({data:d,tileWidth:s,tileHeight:s,insertNull:!1}),this.tilemap.addTilesetImage("background-tiles",void 0,256,256);const b=this.tilemap.createLayer(0,"background-tiles",-r,0);b.setCollision([1,3,4,5,6]),e.matter.world.convertTilemapLayer(b);const f=m+2;for(let e=0;e<f;e++)this.tilemap.getTileAt(0,e+p).setFlip(!0,!1);const w=b.getTilesWithin(0,0,h,m);for(const e of w){if(!e||!e.physics||!e.physics.matterBody)continue;const t=e.physics.matterBody;4===e.index?(t.setCollisionCategory(a.PHANTOM_WALLS),t.setCollidesWith(a.FISH)):(t.setCollisionCategory(a.WALLS),t.setCollidesWith(a.SUBMARINE|a.MECHANICAL_HOOK))}this.SafeSpawnHeight=p*s}draw(){this.graphics.clear(),this.graphics.fillGradientStyle(this.BACKGROUND_COLOUR,this.BACKGROUND_COLOUR,1,1),this.graphics.fillRect(0,0,this.width,this.height),this.graphics.fillStyle(this.SKY_COLOUR),this.graphics.fillRect(0,0,this.width,this.SKY_HEIGHT)}}class r extends Phaser.Physics.Matter.Image{constructor(e,t){super(e.matter.world,0,0,"fish1",void 0,{frictionAir:0,mass:.001}),this.started=!1,this.offscreen=!1,this.worth=0,this.weight=0,this.dead=!0,e.add.existing(this),this.band=t,this.setSensor(!0),this.setCollisionCategory(a.FISH),this.setCollidesWith(a.MECHANICAL_HOOK),this.setIgnoreGravity(!0)}setParameters(e){this.setTexture(`fish${e.type}`),this.x=e.position.x,this.y=e.position.y,this.displayWidth=this.width*e.scale,this.displayHeight=this.height*e.scale,this.setVelocity(e.direction.x*e.speed,e.direction.y*e.speed),this.setFlipX(!0),this.setFlipY(!1),this.setRotationDeg(e.directionAngle),this.worth=e.worth,this.weight=e.weight,this.started=!0,this.offscreen=!0,this.dead=!1}update(){if(this.dead)return;const e=this.scene.cameras.main.width,t=this.getBounds();this.started&&this.offscreen?t.right<=e&&t.left>=0&&(this.started=!1,this.offscreen=!1):!this.offscreen&&(t.right<0||t.left>e)&&(this.offscreen=!0,this.band.respawnFish(this))}catch(){this.band.fishCaught(this)}setRotationDeg(e){e>165&&e<195&&this.setFlipY(!0),this.angle=e}}class n{constructor(e,t){this.generator=new i.Math.RandomDataGenerator,this.fishes=[],this.activeNumberOfFish=0,this.respawnTimer=0,this.scene=e,this.parameters=t;const s=this.parameters.maxNumberOfFish/2;for(let t=0;t<this.parameters.maxNumberOfFish;t++){const i=this.spawnRandomFish(t<s),a=new r(e,this);a.setParameters(i),this.fishes.push(a),this.activeNumberOfFish++}}respawnFish(e){const t=this.spawnRandomFish(this.generator.pick([!0,!1]));e.setParameters(t)}fishCaught(e){e.dead=!0,e.x=-400,e.y=-400,this.activeNumberOfFish--}update(e){this.fishes.forEach((e=>e.update())),this.generateNewFish(e)}generateNewFish(e){if(this.activeNumberOfFish>=this.parameters.maxNumberOfFish)return;if(this.respawnTimer+=e,this.respawnTimer<this.parameters.fishRespawnRate)return;this.respawnTimer-=this.parameters.fishRespawnRate;const t=this.fishes.filter((e=>e.dead))[0];this.respawnFish(t),this.activeNumberOfFish++}spawnRandomFish(e){const t=this.scene.cameras.main.width,s=e?-n.safetyGap:t+n.safetyGap,a=this.generator.integerInRange(this.parameters.minDepth,this.parameters.maxDepth),h=this.generator.realInRange(n.minSpeed,n.maxSpeed),r=this.generator.pick(this.parameters.availableFishTypes),o=this.getMaxAngles(s,a,this.parameters.minDepth,this.parameters.maxDepth,e?t:0),l=e?this.generator.pick([[360-o.up,360],[0,o.down]]):[180-o.down,180+o.up],c=this.generator.integerInRange(l[0],l[1]),g=Math.cos(i.Math.DEG_TO_RAD*c),u=Math.sin(i.Math.DEG_TO_RAD*c),d=this.generator.realInRange(this.parameters.minScale,this.parameters.maxScale),p=Math.floor(20*d);return{type:r,worth:p,weight:p,position:new Phaser.Math.Vector2(s,a),directionAngle:c,direction:new Phaser.Math.Vector2(g,u),speed:h,scale:d}}getMaxAngles(e,t,s,a,h){const r=h+Math.abs(e);let o=Math.atan((t-s)/r)*i.Math.RAD_TO_DEG,l=Math.atan((a-t)/r)*i.Math.RAD_TO_DEG;return o=Math.min(Math.floor(o),n.maxAngle),l=Math.min(Math.floor(l),n.maxAngle),{up:o,down:l}}}n.safetyGap=200,n.minSpeed=.5,n.maxSpeed=1,n.maxAngle=15;class o{constructor(e,t){this.bandParameters=[{minDepth:500,maxDepth:1500,maxNumberOfFish:20,availableFishTypes:[1,2],fishRespawnRate:1e4,minScale:.25,maxScale:1},{minDepth:1500,maxDepth:3e3,maxNumberOfFish:15,availableFishTypes:[2,3],fishRespawnRate:3e4,minScale:.25,maxScale:1}],this.fishBands=[],this.fishBands=this.bandParameters.map((s=>(s.minDepth+=t,s.maxDepth+=t,new n(e,s))))}update(e){this.fishBands.forEach((t=>t.update(e)))}}class l extends Phaser.Physics.Matter.Image{constructor(e,t){super(e.matter.world,0,0,"submarine",void 0,{frictionAir:0,mass:.001}),this.started=!1,this.offscreen=!1,this.weight=0,this.dead=!0,e.add.existing(this),this.band=t,this.setSensor(!0),this.setCollisionCategory(a.HAZARD),this.setCollidesWith(a.MECHANICAL_HOOK|a.SUBMARINE),this.setIgnoreGravity(!0)}setParameters(e){this.setTexture("submarine"),this.x=e.position.x,this.y=e.position.y,this.displayWidth=this.width*e.scale,this.displayHeight=this.height*e.scale,this.setVelocity(e.direction.x*e.speed,e.direction.y*e.speed),this.setFlipX(!0),this.setFlipY(!1),this.setRotationDeg(e.directionAngle),this.weight=e.weight,this.started=!0,this.offscreen=!0,this.dead=!1}update(){if(this.dead)return;const e=this.scene.cameras.main.width,t=this.getBounds();this.started&&this.offscreen?t.right<=e&&t.left>=0&&(this.started=!1,this.offscreen=!1):!this.offscreen&&(t.right<0||t.left>e)&&(this.offscreen=!0,this.band.respawnHazard(this))}hit(){this.band.hazardHit(this)}setRotationDeg(e){e>165&&e<195&&this.setFlipY(!0),this.angle=e}}class c{constructor(e,t){this.generator=new i.Math.RandomDataGenerator,this.hazards=[],this.activeNumberOfHazards=0,this.respawnTimer=0,this.scene=e,this.parameters=t;const s=this.parameters.maxNumberOfHazards/2;for(let t=0;t<this.parameters.maxNumberOfHazards;t++){const i=this.spawnRandomHazard(t<s),a=new l(e,this);a.setParameters(i),this.hazards.push(a),this.activeNumberOfHazards++}}respawnHazard(e){const t=this.spawnRandomHazard(this.generator.pick([!0,!1]));e.setParameters(t)}hazardHit(e){e.dead=!0,e.x=-400,e.y=-400,this.activeNumberOfHazards--}update(e){this.hazards.forEach((e=>e.update())),this.generateNewHazard(e)}generateNewHazard(e){if(this.activeNumberOfHazards>=this.parameters.maxNumberOfHazards)return;if(this.respawnTimer+=e,this.respawnTimer<this.parameters.hazardRespawnRate)return;this.respawnTimer-=this.parameters.hazardRespawnRate;const t=this.hazards.filter((e=>e.dead))[0];this.respawnHazard(t),this.activeNumberOfHazards++}spawnRandomHazard(e){const t=this.scene.cameras.main.width,s=e?-c.safetyGap:t+c.safetyGap,a=this.generator.integerInRange(this.parameters.minDepth,this.parameters.maxDepth),h=this.generator.realInRange(c.minSpeed,c.maxSpeed),r=this.generator.pick(this.parameters.availableHazardTypes),n=this.getMaxAngles(s,a,this.parameters.minDepth,this.parameters.maxDepth,e?t:0),o=e?this.generator.pick([[360-n.up,360],[0,n.down]]):[180-n.down,180+n.up],l=this.generator.integerInRange(o[0],o[1]),g=Math.cos(i.Math.DEG_TO_RAD*l),u=Math.sin(i.Math.DEG_TO_RAD*l),d=this.generator.realInRange(.3,.05);return{type:r,weight:Math.floor(200*d),position:new Phaser.Math.Vector2(s,a),directionAngle:l,direction:new Phaser.Math.Vector2(g,u),speed:h,scale:d}}getMaxAngles(e,t,s,a,h){const r=h+Math.abs(e);let n=Math.atan((t-s)/r)*i.Math.RAD_TO_DEG,o=Math.atan((a-t)/r)*i.Math.RAD_TO_DEG;return n=Math.min(Math.floor(n),c.maxAngle),o=Math.min(Math.floor(o),c.maxAngle),{up:n,down:o}}}c.safetyGap=200,c.minSpeed=.5,c.maxSpeed=1,c.maxAngle=15;class g{constructor(e,t){this.bandParameters=[{minDepth:0,maxDepth:1e3,maxNumberOfHazards:2,availableHazardTypes:[1],hazardRespawnRate:1e4}],this.hazardBands=[],this.hazardBands=this.bandParameters.map((s=>(s.minDepth+=t,s.maxDepth+=t,new c(e,s))))}update(e){this.hazardBands.forEach((t=>t.update(e)))}}const u=new class{constructor(){this.totalWealth=0,this.currentWealth=0,this.maxDepthReached=0,this.currentDepth=0,this.upgradeMenuOpen=!1,this.upgrades={capacity:{totalUpgrades:[50,150,300,500,750,1e3],upgradesBought:0,price:[0,10,20,30,40,50]},depthLimit:{totalUpgrades:[150,300,1e3,2e3,3e3,1e4],upgradesBought:0,price:[0,10,20,30,40,50]},armour:{totalUpgrades:[2,3,4,5,6],upgradesBought:0,price:[0,10,20,30,40]},chain:{totalUpgrades:[2,3,4],upgradesBought:0,price:[0,10,20]},tank:{totalUpgrades:[45,90,135,180,225,270,305],upgradesBought:0,price:[0,10,20,30,40,50,60]},shipSpeed:{totalUpgrades:[5,6,7],upgradesBought:0,price:[0,10,20]},clawSpeed:{totalUpgrades:[5,6,7],upgradesBought:0,price:[0,10,20]},clawSize:{totalUpgrades:[.25,.3,.35,.4],upgradesBought:0,price:[0,10,20,30]},location:{totalUpgrades:[0,1,2],upgradesBought:0,price:[0,10,20]},collectable:{totalUpgrades:[0,1,2],upgradesBought:0,price:[0,10,20]}},this.initSub()}initSub(){this.submarine={oxygen:this.upgrades.tank.totalUpgrades[this.upgrades.tank.upgradesBought],hull:this.getUpgradeValue("depthLimit"),cargo:{fishWeight:0,fishValue:0,oreWeight:0,oreValue:0,researchWeight:0,researchValue:0},isAtSurface:!0,isDead:!1,holdFull:!1,oxygenLow:!1,pressureWarning:0}}getUpgradeValue(e){const t=this.upgrades[e];return t.totalUpgrades[t.upgradesBought]}purchaseUpgrade(e){const t=this.upgrades[e];if(t.upgradesBought<t.totalUpgrades.length-1){const s=t.price[t.upgradesBought+1];return s<=this.currentWealth?(console.log("Upgrading: "+e),t.upgradesBought+=1,this.currentWealth-=s,!0):(console.log("Insufficient funds"),!1)}return!1}sellFish(){console.log("I'm selling all my fish!");const e=this.submarine.cargo.fishValue;this.totalWealth+=e,this.currentWealth+=e,this.submarine.cargo.fishValue=0,this.submarine.cargo.fishWeight=0,this.submarine.holdFull=!1}sellOre(){console.log("I'm selling all my ore!");const e=this.submarine.cargo.oreValue;this.totalWealth+=e,this.currentWealth+=e,this.submarine.cargo.oreValue=0,this.submarine.cargo.oreWeight=0,this.submarine.holdFull=!1}sellResearch(){console.log("I'm selling all my research!");const e=this.submarine.cargo.researchValue;this.totalWealth+=e,this.currentWealth+=e,this.submarine.cargo.researchValue=0,this.submarine.cargo.researchWeight=0,this.submarine.holdFull=!1}checkHoldCapacity(e){return this.submarine.cargo.fishWeight+this.submarine.cargo.oreWeight+this.submarine.cargo.researchWeight+e<=this.getUpgradeValue("capacity")||(this.submarine.holdFull=!0,!1)}catchFish(e){this.checkHoldCapacity(e.weight)&&!this.submarine.isAtSurface&&(this.submarine.cargo.fishWeight+=e.weight,this.submarine.cargo.fishValue+=e.worth,e.catch())}hitHazard(e){this.submarine.hull-=e.weight,e.hit()}collectOre(){}collectResearch(){}fixSub(){const e=this.getUpgradeValue("depthLimit")-this.submarine.hull,t=Math.floor(this.currentWealth/.5),s=Math.min(e,t);this.submarine.hull+=s,this.currentWealth-=Math.floor(.5*s)}},d={width:80,height:16,lowColor:16711680,color:65416,lowThreshold:.5},p={width:80,height:16,lowColor:16711680,color:35071,lowThreshold:.5},m={width:80,height:16,lowColor:5592405,color:5592405,lowThreshold:.3};class b extends Phaser.GameObjects.Graphics{constructor(e,t,s,i,a=i,h){super(e),this.x=t,this.y=s,this.maxValue=i,this.value=a,e.add.existing(this),"oxygen"==h&&(this.config=p),"hull"==h&&(this.config=d),"cargo"==h&&(this.config=m),this.barName=h}update(e,t,s,i){i&&(this.maxValue=i),this.value=s,this.x=e,this.y=t,this.clear(),this.fillStyle(0),this.fillRect(-this.config.width/2,0,this.config.width,this.config.height),this.fillStyle(16777215),this.fillRect(-this.config.width/2+2,2,this.config.width-4,this.config.height-4);const a=this.value/this.maxValue;a<this.config.lowThreshold?this.fillStyle(this.config.lowColor):this.fillStyle(this.config.color);const h=Math.floor(a*(this.config.width-4));this.fillRect(-this.config.width/2+2,2,h,this.config.height-4)}}const f=220;class w extends Phaser.Physics.Matter.Image{constructor(e,t,s=200){super(e.matter.world,t,s,"submarine",void 0,{frictionAir:.05,mass:500}),e.add.existing(this),this.setupKeys(),this.setCollisionCategory(a.SUBMARINE),this.setCollidesWith(a.WALLS|a.MECHANICAL_HOOK|a.HAZARD),this.hook=new y(e,this,u.getUpgradeValue("chain")),this.hullBar=new b(e,50,50,100,100,"hull"),this.oxygenBar=new b(e,50,50,100,100,"oxygen"),this.cargoBar=new b(e,50,50,100,100,"cargo"),this.displayWidth=.25*this.width,this.displayHeight=.25*this.height,this.setIgnoreGravity(!0)}setupKeys(){this.keys=this.scene.input.keyboard.addKeys({up:"W",down:"S",left:"A",right:"D"},!0,!0)}update(){this.updateKeys(),this.updateArm(),this.updateHull(),this.updateOxygen(),this.updateCargo(),this.updateDepth()}updateDepth(){const e=(this.y-f)/10;u.currentDepth=e,e>u.maxDepthReached&&(u.maxDepthReached=e)}updateArm(){this.hook.update()}updateKeys(){if(u.submarine.isDead)return;const e=u.getUpgradeValue("shipSpeed");let t=this.flipX;this.keys.left.isDown?(this.setVelocityX(-e),t=!0):this.keys.right.isDown&&(this.setVelocityX(e),t=!1),this.setFlip(t,!1),this.setRotation(0),this.keys.up.isDown?(this.setVelocityY(1.8*-e),this.setRotation(t?.1:-.1)):this.keys.down.isDown&&(this.setVelocityY(e),this.setRotation(t?-.1:.1)),this.y<f&&(this.y=f),this.y<240?u.submarine.isAtSurface=!0:u.submarine.isAtSurface&&(u.submarine.isAtSurface=!1)}updateOxygen(){const e=u.getUpgradeValue("tank");u.submarine.isAtSurface?(u.submarine.oxygen+=1,u.submarine.oxygenLow=!1):u.submarine.oxygen-=.05,u.submarine.oxygen=Math.max(0,Math.min(u.submarine.oxygen,e)),this.oxygenBar.update(this.x,this.y+-80,u.submarine.oxygen,e),u.submarine.oxygen/e<=.3&&(u.submarine.oxygenLow=!0),u.submarine.oxygen<=0&&this.killSubmarine()}updateHull(){const e=u.getUpgradeValue("depthLimit"),t=Math.max(0,u.currentDepth/e-1);u.submarine.hull-=1*t,u.submarine.hull=Phaser.Math.Clamp(u.submarine.hull,0,e),this.hullBar.update(this.x,this.y+-100,u.submarine.hull,e),u.submarine.hull/e<.3?u.submarine.pressureWarning=2:u.submarine.pressureWarning=t>0?1:0,u.submarine.hull<=0&&this.killSubmarine()}updateCargo(){const e=u.submarine.cargo.fishWeight+u.submarine.cargo.oreWeight+u.submarine.cargo.researchWeight;this.cargoBar.update(this.x,this.y+-60,e,u.getUpgradeValue("capacity"))}killSubmarine(){u.submarine.isDead=!0,this.setFrictionAir(.5),this.setAngularVelocity(.1),this.setIgnoreGravity(!1)}checkUpgrades(){u.getUpgradeValue("chain")!==this.hook.getLength()&&this.upgradeArm()}upgradeArm(){this.hook.destroy(),this.hook=new y(this.scene,this,u.getUpgradeValue("chain"))}}class y{constructor(e,t,s=3){let i;this.segments=[];for(let a=0;a<s;a++){const s=i?i.x:t.x,h=i?i.y:t.y;this.segments[a]=new x(e,s,h,i),i=this.segments[a]}e.matter.add.constraint(t,this.segments[0],0,1,{pointA:{x:0,y:15},pointB:{x:-30,y:0}}),this.hook=new M(e,this.segments[s-1],t)}update(){this.segments.forEach((e=>e.update())),this.hook.update()}getLength(){return this.segments.length}destroy(){this.segments.forEach((e=>e.destroy())),this.hook.destroy()}}class x extends Phaser.Physics.Matter.Image{constructor(e,t,s,i){super(e.matter.world,t,s,"chain",void 0,{frictionAir:.05,mass:.3}),this.setIgnoreGravity(!0),this.setCollisionCategory(a.MECHANICAL_ARM_SEGMENT),this.setCollidesWith(0),this.scene=e,this.displayHeight=20,this.displayWidth=80,e.add.existing(this),i&&(this.y+=80,e.matter.add.constraint(i,this,0,1,{pointA:{x:30,y:0},pointB:{x:-30,y:0}}))}}class M extends Phaser.Physics.Matter.Image{constructor(e,t,s){super(e.matter.world,t.x,t.y+40,"mechanical-hook",void 0,{frictionAir:.05,mass:2}),this.setIgnoreGravity(!0),this.setCollisionCategory(a.MECHANICAL_HOOK),this.setCollidesWith(a.WALLS|a.FISH|a.HAZARD),this.sub=s,this.prev=t,e.add.existing(this),this.displayHeight=40,this.displayWidth=40,e.matter.add.constraint(t,this,0,1,{pointA:{x:40,y:0},pointB:{x:0,y:0}})}update(){this.updateMouse(),this.angle=this.prev.angle-90}updateMouse2(){const e=this.scene.cameras.main.worldView.top,t=new Phaser.Math.Vector2(this.scene.input.activePointer.worldX,this.scene.input.activePointer.worldY+e),s=t.clone().subtract(this.sub);if(!u.submarine.isAtSurface&&!u.submarine.isDead){const e=60*u.getUpgradeValue("chain");if(s.length()<e)this.x=t.x,this.y=t.y;else{const t=s.clone().setLength(e).add(this.sub);this.x=t.x,this.y=t.y}}this.y<f&&(this.y=f)}updateMouse(){const e=this.scene.cameras.main.worldView.top,t=new Phaser.Math.Vector2(this.scene.input.activePointer.worldX,this.scene.input.activePointer.worldY+e);if(this.y<f)this.y=221,this.setIgnoreGravity(!1);else{this.setIgnoreGravity(!0);const e=t.subtract(this),s=u.getUpgradeValue("clawSpeed");if(e.length()>s&&!u.submarine.isAtSurface&&!u.submarine.isDead){const t=e.setLength(s);this.setVelocity(t.x,t.y)}else this.setVelocity(0)}}}class O{constructor(e,t){this.scene=e,this.submarine=t,this.scene.matter.world.on("collisionstart",this.watchCollisions.bind(this))}watchCollisions(e){e.pairs.map(S).filter((e=>null!==e)).forEach((e=>{const t=e.item;"hook"===e.type&&t instanceof r&&u.catchFish(t),"sub"===e.type&&t instanceof l&&u.hitHazard(t)}))}}function S(e){return e.bodyA.gameObject instanceof M?{type:"hook",hook:e.bodyA.gameObject,item:e.bodyB.gameObject}:e.bodyA.gameObject instanceof w?{type:"sub",sub:e.bodyA.gameObject,item:e.bodyB.gameObject}:e.bodyB.gameObject instanceof w?{type:"sub",sub:e.bodyB.gameObject,item:e.bodyA.gameObject}:e.bodyB.gameObject instanceof M?{type:"hook",hook:e.bodyB.gameObject,item:e.bodyA.gameObject}:null}class v extends Phaser.Scene{constructor(){super({key:"MainScene"})}create(){this.cameras.main.fadeIn(500,0,0,0),this.width=this.cameras.main.width,this.height=this.cameras.main.height;const e=1e4;this.matter.world.setBounds(0,0,this.width,e),this.cameras.main.setBounds(0,0,this.width,e),this.background=new h(this,e),this.surfaceVessel=new Phaser.GameObjects.Image(this,300,40,"surface-vessel"),this.surfaceVessel.setScale(.15).flipX=!0,this.add.existing(this.surfaceVessel),this.fishGroup=new o(this,this.background.SafeSpawnHeight),this.hazardGroup=new g(this,this.background.SafeSpawnHeight),this.submarine=new w(this,this.width/2),this.gameWorld=new O(this,this.submarine),this.cameras.main.startFollow(this.submarine),this.scene.get("UIScene").events.on("upgraded",(e=>this.submarine.checkUpgrades()))}update(e,t){this.background.draw(),this.submarine.update(),this.fishGroup.update(t)}}class A extends Phaser.GameObjects.Image{constructor(e,t,s,i,a,h,r){super(e,a,h,"button-background"),e.add.existing(this),this.buttonText=new Phaser.GameObjects.Text(e,a,h,s,{color:"black",fontSize:"18px"}).setOrigin(.5),e.add.existing(this.buttonText),this.buttonKey=t,this.upgradeName=i,this.gameManager=r,this.setInteractive({useHandCursor:!0}),this.setScale(.2,.1),this.setAlpha(.25),this.on("pointerdown",(()=>this.buttonWasClicked())),this.on("pointerover",(()=>this.buttonMouseover())),this.on("pointerout",(()=>this.buttonMouseout()))}buttonWasClicked(){let e=!1;switch(this.buttonKey){case"sell-fish-button":this.gameManager.sellFish();break;case"sell-ore-button":this.gameManager.sellOre();break;case"sell-research-button":this.gameManager.sellResearch();break;case"fix-sub-button":this.gameManager.fixSub();break;case"upgrade-menu-button":this.gameManager.upgradeMenuOpen=!this.gameManager.upgradeMenuOpen;break;case"upgrade-oxygen-button":e=this.gameManager.purchaseUpgrade("tank");break;case"upgrade-cargo-capacity":e=this.gameManager.purchaseUpgrade("capacity");break;case"upgrade-chain-length":e=this.gameManager.purchaseUpgrade("chain");break;case"upgrade-sub-speed":e=this.gameManager.purchaseUpgrade("shipSpeed");break;case"upgrade-claw-speed":e=this.gameManager.purchaseUpgrade("clawSpeed");break;case"upgrade-depth-limit":e=this.gameManager.purchaseUpgrade("depthLimit"),this.gameManager.submarine.hull=this.gameManager.getUpgradeValue("depthLimit");break;case"play-button":this.scene.events.emit("game-started")}e&&this.scene.events.emit("upgraded")}buttonMouseover(){this.setAlpha(1)}buttonMouseout(){this.setAlpha(.25)}}class k extends Phaser.Scene{constructor(){super({key:"MenuScene"})}preload(){this.load.image("button-background","assets/img/ui/button_background_2.png"),this.load.image("menu-background","assets/img/ui/menu_background.png")}create(){console.log("Creating menu background"),this.background=new Phaser.GameObjects.Image(this,400,400,"menu-background"),this.add.existing(this.background),this.background.setScale(.2),this.playButton=new A(this,"play-button","Play!","none",400,400,u),this.scene.get("MenuScene").events.on("game-started",(e=>{this.cameras.main.fadeOut(500,0,0,0),this.cameras.main.once(Phaser.Cameras.Scene2D.Events.FADE_OUT_COMPLETE,((e,t)=>{this.scene.start("MainScene"),this.scene.start("UIScene")}))}))}}class T extends Phaser.Scene{constructor(){super({key:"PreloadScene",active:!0})}preload(){this.load.image("submarine","assets/img/submarine.png"),this.load.image("mechanical-hook","assets/img/claw.png"),this.load.image("chain","assets/img/chain.png"),this.load.image("fish1","assets/img/fish_type1.png"),this.load.image("fish2","assets/img/fish_type2.png"),this.load.image("fish3","assets/img/fish_type3.png"),this.load.image("background-tiles","assets/img/tiles/wall.png"),this.load.image("surface-vessel","assets/img/Fishing_vessel_1.png")}create(){}}class R extends Phaser.GameObjects.Text{constructor(e){super(e,10,10,"",{color:"white",fontSize:"28px"}),e.add.existing(this),this.setOrigin(0)}update(){this.setText(`fps: ${Math.floor(this.scene.game.loop.actualFps)}`)}}class B{constructor(e,t,s,i){this.buttons=[{key:"upgrade-oxygen-button",label:"O2 Tank",upgrade:"tank"},{key:"upgrade-cargo-capacity",label:"Hold Size",upgrade:"capacity"},{key:"upgrade-sub-speed",label:"Ship Speed",upgrade:"shipSpeed"},{key:"upgrade-claw-speed",label:"Claw Speed",upgrade:"clawSpeed"},{key:"upgrade-depth-limit",label:"Hull",upgrade:"depthLimit"},{key:"upgrade-chain-length",label:"Claw Length",upgrade:"chain"}].map(((a,h)=>new A(e,a.key,a.label,a.upgrade,t,s+50*h,i))),this.gameManager=i}showMenu(e){for(const t of this.buttons)if(t.visible=!1,t.buttonText.visible=!1,e){const e=this.gameManager.upgrades[t.upgradeName];e.upgradesBought<e.totalUpgrades.length-1&&e.price[e.upgradesBought+1]<=this.gameManager.currentWealth&&(t.visible=!0,t.buttonText.visible=!0)}}}class D{constructor(e,t){this.scene=e,this.gameManager=t,this.sellFishButton=new A(this.scene,"sell-fish-button","Sell Fish","none",300,200,this.gameManager),this.sellOreButton=new A(this.scene,"sell-ore-button","Sell Ore","none",300,230,this.gameManager),this.sellResearchButton=new A(this.scene,"sell-research-button","Sell Research","none",300,260,this.gameManager),this.fixSubButton=new A(this.scene,"fix-sub-button","Fix Sub","none",550,50,this.gameManager),this.upgradeMenuButton=new A(this.scene,"upgrade-menu-button","Upgrade","none",550,100,this.gameManager),this.upgradeMenu=new B(this.scene,580,150,this.gameManager),this.warningMessage=new Phaser.GameObjects.Text(e,e.cameras.main.width/2,e.cameras.main.height-100,"I'm a warning",{color:"red",fontSize:"56px"}).setOrigin(.5),this.warningMessage.visible=!1,e.add.existing(this.warningMessage),this.currentWealthText=new Phaser.GameObjects.Text(e,3*e.cameras.main.width/4,50,"Gold: 0",{color:"green",fontSize:"36px"}).setOrigin(.5),e.add.existing(this.currentWealthText),this.currentDepthText=new Phaser.GameObjects.Text(e,3*e.cameras.main.width/4,80,"Current Depth: 0",{color:"green",fontSize:"36px"}).setOrigin(.5),e.add.existing(this.currentDepthText),this.maxDepthText=new Phaser.GameObjects.Text(e,3*e.cameras.main.width/4,110,"Max Depth: 0",{color:"green",fontSize:"36px"}).setOrigin(.5),e.add.existing(this.maxDepthText)}update(){const{isAtSurface:e}=this.gameManager.submarine,t=this.gameManager.submarine.cargo.fishWeight>0,s=this.gameManager.submarine.cargo.oreWeight>0,i=this.gameManager.submarine.cargo.researchWeight>0,a=this.gameManager.currentWealth>0,h=this.gameManager.submarine.hull<this.gameManager.getUpgradeValue("depthLimit");e?(this.upgradeMenuButton.visible=a,this.upgradeMenuButton.buttonText.visible=a,this.fixSubButton.visible=h,this.fixSubButton.buttonText.visible=h,this.sellFishButton.visible=t,this.sellFishButton.buttonText.visible=t,this.sellOreButton.visible=s,this.sellOreButton.buttonText.visible=s,this.sellResearchButton.visible=i,this.sellResearchButton.buttonText.visible=i):(this.upgradeMenuButton.visible=!1,this.upgradeMenuButton.buttonText.visible=!1,this.fixSubButton.visible=!1,this.fixSubButton.buttonText.visible=!1,this.sellFishButton.visible=!1,this.sellFishButton.buttonText.visible=!1,this.sellOreButton.visible=!1,this.sellOreButton.buttonText.visible=!1,this.sellResearchButton.visible=!1,this.sellResearchButton.buttonText.visible=!1),this.warningMessage.setText("").visible=!1;const{holdFull:r}=this.gameManager.submarine;r&&(this.warningMessage.setText("Hold Full!").visible=r);const{oxygenLow:n}=this.gameManager.submarine;n&&(this.warningMessage.setText("Oxygen Level Low!").visible=!0);const{pressureWarning:o}=this.gameManager.submarine;1==o&&(this.warningMessage.setText("Hull Breach!").visible=!0),2==o&&(this.warningMessage.setText("Hull Breach Critical!").visible=!0),e||(this.gameManager.upgradeMenuOpen=!1),this.upgradeMenu.showMenu(this.gameManager.upgradeMenuOpen),this.currentWealthText.setText("Gold: "+this.gameManager.currentWealth),this.currentDepthText.setText("Current Depth: "+Math.floor(this.gameManager.currentDepth)),this.maxDepthText.setText("Max Depth: "+Math.floor(this.gameManager.maxDepthReached))}}class C extends Phaser.Scene{constructor(){super({key:"UIScene"})}create(){this.fpsText=new R(this),this.uiGameObject=new D(this,u)}update(){this.fpsText.update(),this.uiGameObject.update()}}window.addEventListener("load",(()=>{new Phaser.Game({type:Phaser.AUTO,backgroundColor:"#244b7e",scale:{parent:"phaser-game",mode:Phaser.Scale.FIT,autoCenter:Phaser.Scale.CENTER_BOTH,width:window.innerWidth,height:window.innerHeight},scene:[k,T,v,C],physics:{default:"matter",matter:{debug:!1,gravity:{y:10}}}})}))},204:()=>{console.log("%c %c %c %c %c Built using phaser-project-template %c https://github.com/yandeu/phaser-project-template","background: #ff0000","background: #ffff00","background: #00ff00","background: #00ffff","color: #fff; background: #000000;","background: none")}},s={};function i(e){var a=s[e];if(void 0!==a)return a.exports;var h=s[e]={exports:{}};return t[e].call(h.exports,h,h.exports,i),h.exports}i.m=t,e=[],i.O=(t,s,a,h)=>{if(!s){var r=1/0;for(l=0;l<e.length;l++){for(var[s,a,h]=e[l],n=!0,o=0;o<s.length;o++)(!1&h||r>=h)&&Object.keys(i.O).every((e=>i.O[e](s[o])))?s.splice(o--,1):(n=!1,h<r&&(r=h));n&&(e.splice(l--,1),t=a())}return t}h=h||0;for(var l=e.length;l>0&&e[l-1][2]>h;l--)e[l]=e[l-1];e[l]=[s,a,h]},i.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e={179:0};i.O.j=t=>0===e[t];var t=(t,s)=>{var a,h,[r,n,o]=s,l=0;for(a in n)i.o(n,a)&&(i.m[a]=n[a]);if(o)var c=o(i);for(t&&t(s);l<r.length;l++)h=r[l],i.o(e,h)&&e[h]&&e[h][0](),e[r[l]]=0;return i.O(c)},s=self.webpackChunkphaser_project_template=self.webpackChunkphaser_project_template||[];s.forEach(t.bind(null,0)),s.push=t.bind(null,s.push.bind(s))})(),i.O(void 0,[216],(()=>i(757)));var a=i.O(void 0,[216],(()=>i(204)));a=i.O(a)})();