/*! For license information please see main.6853a6506e69f04893a5.bundle.js.LICENSE.txt */
(()=>{var t,e={651:(t,e,s)=>{"use strict";var i=s(260);class a{constructor(t){this.upgrades={capacity:{current:10,totalUpgrades:[10,20,30,50,75,100],upgradesBrought:0},depthLimit:{current:250,totalUpgrades:[250,500,1e3,2e3,3e3,1e4],upgradesBrought:0},armour:{current:2,totalUpgrades:[2,3,4,5,6],upgradesBrought:0},chain:{current:2,totalUpgrades:[2,3,4],upgradesBrought:0},tank:{current:45,totalUpgrades:[45,90,135,180,225,270,305],upgradesBrought:0},shipSpeed:{current:5,totalUpgrades:[5,6,7],upgradesBrought:0},clawSpeed:{current:5,totalUpgrades:[5,6,7],upgradesBrought:0},clawSize:{current:.25,totalUpgrades:[.25,.3,.35,.4],upgradesBrought:0},location:{current:0,totalUpgrades:[0,1,2],upgradesBrought:0},collectable:{current:0,totalUpgrades:["fish","minerals","research"],upgradesBrought:0}}}purchaseUpgrade(t){var e=this.upgrades[t];e.upgradesBrought<e.totalUpgrades.length&&(e.upgradesBrought+=1)}}class r{constructor(t,e,s,i=3){let a;this.segments=[];for(let r=0;r<i;r++){const i=a?a.x:e.x,o=a?a.y:e.y;this.segments[r]=new h(t,i,o,s,a),a=this.segments[r]}t.matter.add.constraint(e,this.segments[0],0,1,{pointA:{x:0,y:0},pointB:{x:-40,y:0}});const r=s;this.hook=new o(t,this.segments[i-1],r),e.setCollidesWith(r)}update(){this.segments.forEach((t=>t.update())),this.hook.update()}}class h extends Phaser.Physics.Matter.Image{constructor(t,e,s,i,a){super(t.matter.world,e+80,s,"fish1",void 0,{frictionAir:.05,mass:.001,collisionFilter:{group:i}}),this.scene=t,this.displayHeight=20,this.displayWidth=80,t.add.existing(this),a&&t.matter.add.constraint(a,this,0,1,{pointA:{x:30,y:0},pointB:{x:-30,y:0}})}}class o extends Phaser.Physics.Matter.Image{constructor(t,e,s){super(t.matter.world,e.x+40,e.y,"mechanical-hook",void 0,{frictionAir:.05,mass:.1,collisionFilter:{group:s}}),this.prev=e,this.scene=t,t.add.existing(this),this.displayHeight=40,this.displayWidth=40,t.matter.add.constraint(e,this,0,1,{pointA:{x:40,y:0},pointB:{x:0,y:0}}),this.setupKeys()}setupKeys(){this.keys=this.scene.input.keyboard.addKeys({up:"UP",down:"DOWN",left:"LEFT",right:"RIGHT"},!0,!0)}update(){this.angle=this.prev.angle-90,this.keys.left.isDown?this.setVelocityX(-5):this.keys.right.isDown&&this.setVelocityX(5),this.keys.up.isDown?this.setVelocityY(-5):this.keys.down.isDown&&this.setVelocityY(5)}}class n extends Phaser.Physics.Matter.Image{constructor(t,e,s){super(t.matter.world,e,s,"submarine",void 0,{frictionAir:.05,mass:500,restitution:.6}),t.add.existing(this),this.setupKeys();const i=t.matter.world.nextGroup(!0);this.setCollisionGroup(i),this.hook=new r(t,this,i),this.setScale(.025)}setupKeys(){this.keys=this.scene.input.keyboard.addKeys({up:"W",down:"S",left:"A",right:"D"},!0,!0)}update(){this.keys.left.isDown?(this.setVelocityX(-5),this.setFlip(!0,!1)):this.keys.right.isDown&&(this.setVelocityX(5),this.setFlip(!1,!1)),this.keys.up.isDown?this.setVelocityY(-5):this.keys.down.isDown&&this.setVelocityY(5),this.hook.update()}}class c extends Phaser.GameObjects.Text{constructor(t){super(t,10,10,"",{color:"black",fontSize:"28px"}),t.add.existing(this),this.setOrigin(0)}update(){this.setText(`fps: ${Math.floor(this.scene.game.loop.actualFps)}`)}}class d extends Phaser.Physics.Matter.Image{constructor(t,e){super(t.matter.world,0,0,"fish"+e.type,void 0,{frictionAir:0}),this.setPosition(e.position.x,e.position.y),this.setScale(e.scale),e.directionAngle>0&&this.setFlipX(!0),this.setRotation(e.directionAngle),this.worth=e.worth,t.add.existing(this)}update(t){i.Math.Vector2.ZERO}}class l{constructor(t,e){this.fishes=[];for(let s=0;s<e;s++){const e=this.spawnRandomFish(t);this.fishes[s]=new d(t,e)}}update(t){this.fishes.forEach((e=>e.update(t)))}spawnRandomFish(t){const e=new i.Math.RandomDataGenerator,s=e.integerInRange(64,t.cameras.main.width-64),a=e.integerInRange(64,t.cameras.main.height-64),r=e.integerInRange(1,10),h=e.integerInRange(1,100),o=e.integerInRange(0,1e4),n=e.integerInRange(1,3),c=e.rotation(),d=Math.cos(c),l=Math.sin(c);return{type:n,worth:o,weight:h,position:new Phaser.Math.Vector2(s,a),directionAngle:c,direction:new Phaser.Math.Vector2(d,l),speed:r,scale:e.realInRange(.25,1)}}}class p extends Phaser.GameObjects.GameObject{constructor(t,e){super(t,"background"),this.BACKGROUND_COLOUR=2378622,t.add.existing(this),this.graphics=t.add.graphics(),this.width=t.cameras.main.width,this.height=e;const s=i.Math.CeilTo(this.width/64),a=i.Math.CeilTo((64*s-this.width)/2),r=[0];for(let t=0;t<s-2;t++)r.push(-1);r.push(0);const h=[],o=i.Math.FloorTo(this.height/64)+1;for(let t=0;t<o;t++)h.push(r.slice());this.tilemap=t.make.tilemap({data:h,tileWidth:64,tileHeight:64}),this.tilemap.addTilesetImage("background-tiles",void 0,256,256),this.tilemap.createLayer(0,"background-tiles",-a,0);for(let t=0;t<o;t++)this.tilemap.getTileAt(0,t).setFlip(!0,!1)}draw(){this.graphics.clear(),this.graphics.fillGradientStyle(this.BACKGROUND_COLOUR,this.BACKGROUND_COLOUR,1,1),this.graphics.fillRect(0,0,this.width,this.height)}}class g extends Phaser.Scene{constructor(){super({key:"MainScene"})}create(){this.width=this.cameras.main.width,this.height=this.cameras.main.height;const t=1e4;this.matter.world.setBounds(0,0,this.width,t),this.cameras.main.setBounds(0,0,this.width,t),this.background=new p(this,t),this.gameManager=new a(this),this.submarine=new n(this,this.width/2,this.height/2+100),this.fpsText=new c(this),this.fishGroup=new l(this,5),this.cameras.main.startFollow(this.submarine)}update(t,e){this.background.draw(),this.submarine.update(),this.fpsText.update(),this.fishGroup.update(e)}}class u extends Phaser.Scene{constructor(){super({key:"PreloadScene"})}preload(){this.load.image("submarine","assets/img/submarine.png"),this.load.image("mechanical-hook","assets/img/claw.png"),this.load.image("mechanical-arm-segment","assets/img/chain.jpeg"),this.load.image("fish1","assets/img/fish_type1.png"),this.load.image("fish2","assets/img/fish_type2.png"),this.load.image("fish3","assets/img/fish_type3.png"),this.load.image("background-tiles","assets/img/tiles/wall.png"),this.load.json("shapes","assets/json/shapes.json")}create(){this.scene.start("MainScene")}}const m={type:Phaser.AUTO,backgroundColor:"#ffffff",scale:{parent:"phaser-game",mode:Phaser.Scale.FIT,autoCenter:Phaser.Scale.CENTER_BOTH,width:window.innerWidth,height:window.innerHeight},scene:[u,g],physics:{default:"matter",matter:{debug:!1,gravity:{y:0}}}};window.addEventListener("load",(()=>{new Phaser.Game(m)}))},204:()=>{console.log("%c %c %c %c %c Built using phaser-project-template %c https://github.com/yandeu/phaser-project-template","background: #ff0000","background: #ffff00","background: #00ff00","background: #00ffff","color: #fff; background: #000000;","background: none")}},s={};function i(t){var a=s[t];if(void 0!==a)return a.exports;var r=s[t]={exports:{}};return e[t].call(r.exports,r,r.exports,i),r.exports}i.m=e,t=[],i.O=(e,s,a,r)=>{if(!s){var h=1/0;for(c=0;c<t.length;c++){for(var[s,a,r]=t[c],o=!0,n=0;n<s.length;n++)(!1&r||h>=r)&&Object.keys(i.O).every((t=>i.O[t](s[n])))?s.splice(n--,1):(o=!1,r<h&&(h=r));o&&(t.splice(c--,1),e=a())}return e}r=r||0;for(var c=t.length;c>0&&t[c-1][2]>r;c--)t[c]=t[c-1];t[c]=[s,a,r]},i.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),(()=>{var t={179:0};i.O.j=e=>0===t[e];var e=(e,s)=>{var a,r,[h,o,n]=s,c=0;for(a in o)i.o(o,a)&&(i.m[a]=o[a]);if(n)var d=n(i);for(e&&e(s);c<h.length;c++)r=h[c],i.o(t,r)&&t[r]&&t[r][0](),t[h[c]]=0;return i.O(d)},s=self.webpackChunkphaser_project_template=self.webpackChunkphaser_project_template||[];s.forEach(e.bind(null,0)),s.push=e.bind(null,s.push.bind(s))})(),i.O(void 0,[216],(()=>i(651)));var a=i.O(void 0,[216],(()=>i(204)));a=i.O(a)})();